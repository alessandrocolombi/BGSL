% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BGSL_export.R
\name{sigmaG_GGM_tuning}
\alias{sigmaG_GGM_tuning}
\title{Tuning \code{sigmaG} parameter}
\usage{
sigmaG_GGM_tuning(
  data,
  n,
  niter = 1000,
  sigmaG_list = seq(0.05, 0.55, by = 0.05),
  Nrep = 10,
  Param = NULL,
  HyParam = NULL,
  Init = NULL,
  n_groups = 0,
  groups = NULL,
  form = "Complete",
  prior = "Uniform",
  algo = "RJ",
  seed = 0
)
}
\arguments{
\item{data}{two possibilities are available. (1) a \mjseqn{p \times n} matrix corresponding to \code{n} observation of \code{p}-dimensional variables or (2)
a \mjseqn{p \times p} matrix representing \mjseqn{\sum_{i=1}^{n}(y_{i}y_{i}^{T})}, where \mjseqn{y_{i}} is the \code{i}-th observation of a \code{p}-dimensional variale.
Data are assumed to be zero mean.}

\item{n}{number of observed values.}

\item{niter}{the number of total iterations to be performed in the sampling. The number of saved iteration will be \mjseqn{(niter - burnin)/thin}.}

\item{sigmaG_list}{list containing the values of \code{sigmaG} that has to be tested.}

\item{Nrep}{how many times each \code{sigmaG} has to be tested.}

\item{Param}{list containing parameters needed by the sampler. It has to follow the same notation of the one generated by \code{\link{sampler_parameters}} function. It is indeed recommended to build it through that particular function. \code{BaseMat} field is not needed.}

\item{HyParam}{list containing hyperparameters needed by the sampler. It has to follow the same notation of the one generated by \code{\link{GM_hyperparameters}} function. It is indeed recommended to build it through that particular function.}

\item{Init}{list containig initial values for Markov chain. It has to follow the same notation of the one generated by \code{\link{GM_init}} function. It is indeed recommended to build it through that particular function.}

\item{n_groups}{number of desired groups. Not used if form is \code{"Complete"} or if the groups are directly insered as \code{groups} parameter.}

\item{groups}{a list representing the groups of the block form. Numerations starts from 0 and vertrices has to be contiguous from group to group,
i.e ((0,1,2),(3,4)) is fine but ((1,2,3), (4,5)) and ((1,3,5), (2,4)) are not. If \code{"NULL"}, \code{"n_groups"} are automatically generated. Not needed if form is set to \code{"Complete"}.}

\item{form}{string that states if the true graph has to be in \code{"Block"} or \code{"Complete"} form. Only possibilities are \code{"Complete"} and \code{"Block"}.}

\item{prior}{string with the desidered prior for the graph. Possibilities are \code{"Uniform"}, \code{"Bernoulli"} and for \code{"Block"} graphs only \code{"TruncatedBernoulli"} and \code{"TruncatedUniform"} are also available.}

\item{algo}{string with the desidered algorithm for sampling from a GGM. Possibilities are \code{"MH"}, \code{"RJ"} and \code{"DRJ"}.}

\item{seed}{integer, seeding value. Set 0 for random seed.}
}
\value{
plots the mean acceptance ratio for each \code{sigmaG} and returns the highest one.
}
\description{
\loadmathjax The choice of \code{sigmaG} parameter is a crucial part of \code{"RJ"} and \code{"DRJ"} algorithm. It indeed represents the standard deviation for the proposal of new elements in the
precision matrix. This function provides an utility for tuning this parameter by simply repeting \code{Nrep} times the first \code{niter} iteration for every proposed
\code{sigmaG} in \code{sigmaG_list}.
}
