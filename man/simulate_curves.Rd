% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BGSL_export.R
\name{simulate_curves}
\alias{simulate_curves}
\title{Simulate curves}
\usage{
simulate_curves(
  p = 10,
  n = 300,
  r = 235,
  range_x = c(100, 200),
  G = NULL,
  K = NULL,
  b = 3,
  D = NULL,
  tau_eps = 0,
  spline_order = 3,
  n_picks = 1,
  height1 = 1,
  height2 = 1,
  width1 = 36,
  width2 = 24,
  position1 = 10,
  position2 = 2,
  rate = 0.01/2,
  n_plot = n,
  highlight_band1 = NULL,
  highlight_band2 = NULL,
  title_plot = "Curves",
  xtitle = " ",
  ytitle = " ",
  seed = 1212
)
}
\arguments{
\item{p}{Dimension of the true underlying graph.}

\item{n}{Number of curves to be generated.}

\item{range_x}{vector of length two defining the interval for the curves.}

\item{G}{matrix of size \eqn{p x p} representing the true underlying graph. Default is \code{NULL} that corresponds to a diagonal graph.}

\item{K}{matrix of size \eqn{p x p} representing the true underlying precision matrix. If \code{NULL}, a sample from a GWishart is drawn.}

\item{b}{GWishart shape parameter used if the matrix \code{K} has to be drawn. It has to be larger than 2 in order to have a well defined distribution. Default is 3.}

\item{D}{GWishart inverse scale matrix parameter used if the matrix \code{K} has to be drawn. It has to be symmetric and positive definite. Default is \code{0.01*diag(p)}.}

\item{spline_order}{order of the Bsplines. Set four for cubic splines.}

\item{n_picks}{The number of desired picks in the simulated curves. It may be one for a single, Gaussian like, shape or two for a double Gaussian shape.}

\item{height1}{Heigth of the pick of the first Gaussian.}

\item{height2}{Heigth of the pick of the second Gaussian.}

\item{width1}{Set how large the first pick has to be. This parameter acts like a standard deviation of a Normal distribution, so the larger it is, the thinner is the pick.}

\item{width2}{Set how large the second pick has to be. This parameter acts like a standard deviation of a Normal distribution, so the larger it is, the thinner is the pick.}

\item{position1}{Set where the first pick has to be located. Position is then computed as \code{range_x[1] + (range_x[2]-range_x[1])/position1}. Set 2 to place it in the middle.}

\item{position2}{Set where the second pick has to be located. Position is then computed as \code{range_x[2] - (range_x[2]-range_x[1])/position2}. Set 2 to place it in the middle.}

\item{n_plot}{The number of curves to be plotted. If it is set to 0, no curves are displayed.}

\item{highlight_band1}{Vector that states if a particular band of the plot has to be highlighted. It has to be a vector within the range \code{[1,n_basis]}.}

\item{title_plot}{Title of the plot.}

\item{xtitle}{Title of the x-axis.}

\item{ytitle}{Title of the x-axis.}

\item{seed}{seed used to simulate data. Set 0 for random seed.}

\item{n_grid_points}{dimension of the grid where the spline are evaluated.}
}
\value{
It returns a list with the simulated curves as well as all the other underlying parameters, that are Beta, mu, G, K. It then returns the (n_grid_points x p) design matrix
containing the evaluation of all the splines in all the grid points. Finally it also returns the interal knots used in the creation of the splines.
}
\description{
This function genrates a dataset of n functional curves. Data are generated trying to simulate the shape of one or two Gaussian distributions.
}
