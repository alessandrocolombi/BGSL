% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Generate_Basis_derivatives}
\alias{Generate_Basis_derivatives}
\title{Generate Bspine basis and its derivatives}
\usage{
Generate_Basis_derivatives(
  n_basis,
  nderiv,
  range,
  n_points = 0L,
  grid_points = as.numeric(c(0)),
  order = 3L
)
}
\arguments{
\item{n_basis}{the number of basis functions.}

\item{nderiv}{number of derivates that have to be computed. It can also be 0.}

\item{range}{vector of two elements containing first the lower and then the upper bound of the interval.}

\item{grid_points}{vector of points where the basis has to be evaluated. If defaulted, then \code{n_points} are uniformly generated in the interval.}

\item{order}{integer, order of the Bsplines. Set four for cubic splines.}

\item{points}{number of grid points where the basis has to be evaluated. It is not used if the points are directly passed in the \code{grid_points} parameter.}
}
\value{
a list of length nderiv+1 such that each element is a \mjseqn{n\_points \times n\_basis} matrix representing the evaluation of
the \code{k}-th derivative of all the splines in all the grid points.
}
\description{
\loadmathjax This function creates a truncated Bspline basis in the interval \mjseqn{[range(1),range(2)]} and evaluate them over a grid of points up to derivative of order \code{nderiv}.
For convention, derivatives of order 0 are the splines themselves. This implimes that the first returned element is always equal to the output of the function \code{\link{Generate_Basis}}.
}
