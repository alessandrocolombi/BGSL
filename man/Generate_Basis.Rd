% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Generate_Basis}
\alias{Generate_Basis}
\title{Generate Bspine basis}
\usage{
Generate_Basis(
  n_basis,
  range,
  n_points = 0L,
  grid_points = as.numeric(c(0)),
  order = 3L
)
}
\arguments{
\item{n_basis}{the number of basis functions.}

\item{range}{vector of two elements containing first the lower and then the upper bound of the interval.}

\item{n_points}{number of grid points where the basis has to be evaluated. It is not used if the points are directly passed in the \code{grid_points} parameter.}

\item{grid_points}{vector of points where the basis has to be evaluated. If defaulted, then \code{n_points} are uniformly generated in the interval.}

\item{order}{integer, order of the Bsplines. Set four for cubic splines.}
}
\value{
a list containing a matrix of dimension \mjseqn{n\_points \times n\_basis} such that \code{r}-th rows contains all the spline computed in the \code{r}-th point of the grid and \code{j}-th column
contains the \code{j}-th spline evaluated in all grid points. It also returns a vector of size \mjseqn{n\_basis + 2 - order} containing the internal knots used to create the spline.
}
\description{
\loadmathjax This function creates a truncated Bspline basis in the interval \mjseqn{\[range(1),range(2)\]} and evaluate them over a grid of points.
It assumes uniformly spaced breakpoints and constructs the corresponding knot vector using a number of breaks equal to \mjseqn{n\_basis + 2 - order}.
}
